buildscript {
    repositories {
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.20"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'maven-publish'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    group 'com.github.only52607.luakt'
    version '2.5.6'

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation 'cglib:cglib:3.3.0'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://www.jitpack.io' }
        mavenCentral()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set('sources')
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier.set('javadoc')
    }
}

dependencies {
    api project(":luakt-luaj")
    api project(":luakt-core")
    api project(":luakt-libs")
    api project(":luakt-dsl")

    testImplementation project(":luakt-core")
    testImplementation project(":luakt-dsl")
    testImplementation project(":luakt-dsl-cr")
    testImplementation project(":luakt-libs")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs = ["-Xcontext-receivers"]
}

publishing {
    publications {
        luakt(MavenPublication) {
            setArtifactId("luakt")
            from components.java
        }
        luaj(MavenPublication) {
            setArtifactId("luakt-luaj")
            def coreProject = project(':luakt-luaj')
            from coreProject.components.java
            artifact coreProject.tasks.sourcesJar
            artifact coreProject.tasks.javadocJar
        }
        core(MavenPublication) {
            setArtifactId("luakt-core")
            def coreProject = project(":luakt-core")
            from coreProject.components.java
            artifact coreProject.tasks.sourcesJar
            artifact coreProject.tasks.javadocJar
        }
        libs(MavenPublication) {
            setArtifactId("luakt-libs")
            def coreProject = project(':luakt-libs')
            from coreProject.components.java
            artifact coreProject.tasks.sourcesJar
            artifact coreProject.tasks.javadocJar
        }
        dsl(MavenPublication) {
            setArtifactId("luakt-dsl")
            def coreProject = project(':luakt-dsl')
            from coreProject.components.java
            artifact coreProject.tasks.sourcesJar
            artifact coreProject.tasks.javadocJar
        }
        dslCr(MavenPublication) {
            setArtifactId("luakt-dsl-cr")
            def coreProject = project(':luakt-dsl-cr')
            from coreProject.components.java
            artifact coreProject.tasks.sourcesJar
            artifact coreProject.tasks.javadocJar
        }
    }

    repositories {
        mavenCentral()
    }
}